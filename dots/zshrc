# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="hersonls"
CASE_SENSITIVE="true"
COMPLETION_WAITING_DOTS="true"
plugins=(git yeoman)
source $ZSH/oh-my-zsh.sh

# Disable autocorrect
unsetopt correct

# Detect OS
if [[ `uname` == 'Linux' ]]
then
  export LINUX=1
  export GNU_USERLAND=1
else
  export LINUX=
fi

if [[ `uname` == 'Darwin' ]]
then
  export OSX=1
else
  export OSX=
fi

export NACL_SDK_ROOT="/usr/local/lib/nacl_sdk/pepper_49"

# Add `~/bin` to the `$PATH`
addpath() {
  export PATH="${1}:$PATH"
}

addpath "$NACL_SDK_ROOT/toolchain/mac_pnacl/bin"
addpath "$NACL_SDK_ROOT/tools"
addpath "$GOPATH/bin"
addpath "$HOME/bin"
addpath "/usr/local/share/npm/bin"
addpath "/usr/local/git/bin"
addpath "/opt/X11/bin" addpath "/usr/local/sbin"
addpath "/sbin"
addpath "/usr/sbin"
addpath "/bin"
addpath "/usr/bin"
addpath "/usr/local/share/"
addpath "/usr/local/share/python/"
addpath "/usr/local/mysql/bin"
addpath "/usr/local/bin"
addpath "./node_modules/.bin"
addpath "$HOME/.yarn/bin"

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you donâ€™t want to commit.
for file in ~/.{path,exports,aliases,functions,extra}; do
    [ -r "$file" ] && source "$file"
done
unset file

# If possible, add tab completion for many more commands
[ -f /etc/bash_completion ] && source /etc/bash_completion

# Z
[ -f ~/Code/opensource/z/z.sh ] && . ~/Code/opensource/z/z.sh

# Virtualenvwrapper Settings
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER=/usr/local/bin/virtualenvwrapper.sh

[ -f ${VIRTUALENVWRAPPER} ] && source ${VIRTUALENVWRAPPER}

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# pyenv
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Android SDK
export ANDROID_HOME=/usr/local/opt/android-sdk
export ANDROID_SDK_HOME=~/.android/avd
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

# GO
export GOPATH=$GOPATH:~/code/go

# Tmux
# export POWERLINE_CONFIG_COMMAND=/usr/local/bin/powerline-config

#if [ "$TMUX" = "" ]; then
#    tmux attach -t base || tmux new -s base
#fi

function chpwd() {
  if [ -z "$VIRTUAL_ENV" ]; then
    # If exists a virtualenv with name of directory, load it!
    workon ${PWD##*/} 2> /dev/null
  else
    # If a virtual env are loaded, rename window with they name
    TMUX_WINDOW_NAME=$(tmux display-message -p '#W')
    if [ $TMUX_WINDOW_NAME != ${VIRTUAL_ENV##*/} ]; then
      tmux rename-window ${VIRTUAL_ENV##*/} ; 
    fi
  fi
}

# Add ssk-key
ssh-add -K 2> /dev/null

# Add bash completetion for NPM
function npmbin () {
  PATH=$(npm bin):$PATH $@
}

function _comp_npm () {
  _arguments '1: :->command_'
  case $state in
    command_)
      _files -W "$(npm bin)" -/
      ;;
    *)
      _files
      ;;
  esac
}

compdef _comp_npm npmbin

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
export PATH="/usr/local/opt/gettext/bin:$PATH"
