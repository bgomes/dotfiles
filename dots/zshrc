# Start TMUX if not started

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="hersonls"
CASE_SENSITIVE="true"
COMPLETION_WAITING_DOTS="true"
plugins=(git yeoman)
source $ZSH/oh-my-zsh.sh

# Disable autocorrect
unsetopt correct

export NACL_SDK_ROOT="/usr/local/lib/nacl_sdk/pepper_49"

# Add `~/bin` to the `$PATH`
export PATH="/usr/local/bin:/usr/local/mysql/bin:/usr/local/share/python/:/usr/local/share/:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/opt/X11/bin:/usr/local/git/bin:/usr/local/share/npm/bin:$HOME/bin:./node_modules/.bin:$GOPATH/bin:$NACL_SDK_ROOT/tools:$NACL_SDK_ROOT/toolchain/mac_pnacl/bin:$PATH"

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you donâ€™t want to commit.
for file in ~/.{path,exports,aliases,functions,extra}; do
    [ -r "$file" ] && source "$file"
done
unset file

# If possible, add tab completion for many more commands
[ -f /etc/bash_completion ] && source /etc/bash_completion

# Z
[ -f ~/Code/opensource/z/z.sh ] && . ~/Code/opensource/z/z.sh

# Update python path
# export PYTHONPATH="/usr/local/lib/python2.7/site-packages:$PYTHONPATH"

# Virtualenvwrapper Settings
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER=/usr/local/bin/virtualenvwrapper.sh

[ -f ${VIRTUALENVWRAPPER} ] && source ${VIRTUALENVWRAPPER}

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# Android SDK
export ANDROID_HOME=/usr/local/opt/android-sdk
export ANDROID_SDK_HOME=~/.android/avd
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

# GO
export GOPATH=$GOPATH:~/code/go

# Tmux
# export POWERLINE_CONFIG_COMMAND=/usr/local/bin/powerline-config

if [ "$TMUX" = "" ]; then
    tmux attach -t base || tmux new -s base
fi

function chpwd() {
  if [ -z "$VIRTUAL_ENV" ]; then
    # If exists a virtualenv with name of directory, load it!
    workon ${PWD##*/} 2> /dev/null
  else
    # If a virtual env are loaded, rename window with they name
    TMUX_WINDOW_NAME=$(tmux display-message -p '#W')
    if [ $TMUX_WINDOW_NAME != ${VIRTUAL_ENV##*/} ]; then
      tmux rename-window ${VIRTUAL_ENV##*/} ; 
    fi
  fi
}


test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
